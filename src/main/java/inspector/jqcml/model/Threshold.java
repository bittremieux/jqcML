package inspector.jqcml.model;

import com.google.common.base.MoreObjects;
import inspector.jqcml.jpa.customizer.ThresholdCustomizer;
import org.eclipse.persistence.annotations.Customizer;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * Contains threshold information for an associated {@link QualityParameter}.
 * This object is mainly used to refer to an external file containing the required data.
 */
//JAXB
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name="threshold")
//JPA
@Entity
@Customizer(ThresholdCustomizer.class)
@Table(name="threshold")
public class Threshold extends CvParameter {

    /** read-only qcDB primary key; generated by JPA */
    // JAXB
    @XmlTransient
    // JPA
    @Id
    @TableGenerator(name="pk_threshold", table="pk_sequence", pkColumnName="name",
            valueColumnName="seq", pkColumnValue="threshold", allocationSize=1)
    @GeneratedValue(strategy=GenerationType.TABLE, generator="pk_threshold")
    @Column(name="TH_ID_PK")
    private int primaryKey;

    /** refers to an external file containing threshold information */
    // JAXB
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name="token")
    @XmlAttribute(name="thresholdFilename")
    // JPA
    @Column(length=255, name="threshold_filename")
    private String fileName;

    /** inverse part of the bi-directional relationship with {@link QualityParameter} */
    // JAXB
    @XmlTransient
    // JPA
    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="QP_ID_FK", referencedColumnName="QP_ID_PK")
    private QualityParameter parentParameter;

    /**
     * Constructs a new empty Threshold object.
     */
    public Threshold() {
        super();
    }

    /**
     * Constructs a new Threshold object with the given name and defined by the given {@link Cv} object.
     *
     * @param name  The name of the threshold
     * @param cvRef  The reference to the Cv object which defines this threshold
     * @param accession  The accession number identifying this parameter in the controlled vocabulary
     */
    public Threshold(String name, Cv cvRef, String accession) {
        super(name, cvRef, accession);
    }

    /**
     * Returns the name of the (external) file containing the threshold information.
     *
     * @return The name of the file containing the threshold information
     */
    public String getFileName() {
        return fileName;
    }

    /**
     * Sets the name of the (external) file containing the threshold information.
     * @param fileName  The name of the file containing the threshold information
     */
    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    public void setParentQualityParameter(QualityParameter parent) {
        this.parentParameter = parent;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("name", name).add("accession", accession).add("value", value)
                .add("unit name", unitName).add("unit accession", unitAccession).add("description", description)
                .add("file name", fileName).omitNullValues().toString();
    }

}
